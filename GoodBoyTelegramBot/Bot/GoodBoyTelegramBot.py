import telebot
from telebot import types
import random
import time
import sqlite3
import command
from config import token
bot = telebot.TeleBot(token)

def main():

    @bot.message_handler(commands=['onkeyboard'])
    def keyBoardButton(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard=True)
        first_button_key = types.KeyboardButton(text = "‚úå –ü—Ä–∏–≤–µ—Ç ‚úå")
        second_button_key = types.KeyboardButton(text = "üé∞ –ö—Ä—É—Ç–∏ –±–∞—Ä–∞–±–∞–Ω üé≤")
        third_button_key = types.KeyboardButton(text = "Close")
        markup.row(first_button_key)
        markup.row(second_button_key)
        markup.row(third_button_key)
        bot.send_message(message, '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É' , reply_markup = markup)
    

    @bot.message_handler(content_types=["new_chat_members"])
    def handler_new_member(message):
        user_name = message.new_chat_members[0].first_name
        random.seed()
        chooise = random.randint(0, 1)
        print("new_chat_members random", chooise)
        if(chooise == 0):
            bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫—É—Å–æ–∫ –º—è—Å–∞, {user_name}! üëã")
        elif(chooise == 1):
            bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã")

    @bot.message_handler(commands=['start'])
    def send_start(message):
        bot.send_message(message.chat.id, f'''–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {message.from_user.first_name} üëã''')

    @bot.message_handler(commands=['help'])
    def send_help(message):
        bot.send_message(message.chat.id, f' –ô–æ—É {message.from_user.first_name} —É–∂–µ –ª—É—á—à–µ –Ω–æ —è –µ—â–µ –≤ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏–∏, –∫–æ–º–∞–Ω–¥—ã: \n /start \n /help \n /onkeyboard \n /db \n /go \n')

    @bot.message_handler(commands=['go'])
    def send_go(message):
        bot.send_message(message.chat.id, f'–¢—ã —ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã! ‚úÖ')

    @bot.message_handler(commands=['db'])
    def send_for_Stas(message):
        bot.reply_to(message, f'—Ä–∞–±–æ—Ç–∞—Ç—å {message.from_user.username} !')

    @bot.message_handler(commands=['incident'])
    def chooise_incident(message):
            random.seed()
            chooise = random.randint(1, 7)

            bot.send_message(message.chat.id, f'–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ-—Ä–æ–∑—ã—Å–∫–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π üëÆ')
            time.sleep(1)
            bot.send_message(message.chat.id, f'–°–±–æ—Ä —É–ª–∏–∫ üîç')
            time.sleep(1)
            bot.send_message(message.chat.id, f'–û–ø—Ä–æ—Å —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π üêÄ')
            time.sleep(1)
            bot.send_message(message.chat.id, f'–ù—É —á—Ç–æ –∫—É—Å–æ–∫ –º—è—Å–∞ —Ç—ã —Å–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞–µ—à—å üíª')
            time.sleep(1)
            if(chooise == 7):
                bot.send_message(message.chat.id, f'‚úå  –î–∏–º–æ–Ω ‚úå')
            elif(chooise == 6):
                bot.send_message(message.chat.id, f'‚úå –ê–Ω–¥—Ä–µ–π ‚úå')
            elif(chooise == 5):
                bot.send_message(message.chat.id, f'üíÉ –û–∫—Å–∞–Ω–∞ üíÉ')
            elif(chooise == 4):
                bot.send_message(message.chat.id, f'üíÇ –Æ—Ä–∞ üíÇ')
            elif(chooise == 3):
                bot.send_message(message.chat.id, f'üò° –õ–µ—Ö–∞ üò°')
            elif(chooise == 2):
                bot.send_message(message.chat.id, f'üëº –°—Ç–∞—Å üëº')
            elif(chooise == 1):
                bot.send_message(message.chat.id, f'üèÖ –ñ–µ–∫–∞ üèÖ')
            else:
                bot.send_message(message.chat.id, f'–ë—Ä–∞—Ç–∞–Ω—á–∏–∫ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –æ–±—Ä–∞—Ç–∏—Å—å –∫ @Alx326')
            print(chooise)

# –µ—Å–ª–∏ –±–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç –ø—Ä–∏–≤–µ—Ç –∏–¥–µ—Ç –≤—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π 

    @bot.message_handler(content_types=['text'])
    def get_text_messages(message):
        if message.text == "‚úå –ü—Ä–∏–≤–µ—Ç ‚úå":
            bot.send_message(message, f'–ô–æ—É! {message.from_user.username} –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –Ω–∞–∂–º–∏: /help ‚ò∫') #message.from_user.username –≤—ã–≤–æ–¥ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
        elif message.text == "üé∞ –ö—Ä—É—Ç–∏ –±–∞—Ä–∞–±–∞–Ω üé≤":
            chooise_incident(message)
        elif message.text == "hei": 
            bot.send_message(message.chat.id, f'Yamete kudasai {message.from_user.username}!')

#@bot.callback_query_handler(func=lambda call: True)
#def callback_worker(call):
#    if call.data == "first":
#        bot.send_message(call.message.chat.id, f'–ô–æ—É! {message.from_user.username} –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –Ω–∞–∂–º–∏: /help ‚ò∫') #message.from_user.username –≤—ã–≤–æ–¥ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
#    elif call.data == "second": 
#        bot.send_message(message.chat.id, f'hello')
#        print("test")
#    elif call.data == "third":
#        bot.send_message(message.chat.id, f'hello 3')


print("Bot work!")
# –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞
if __name__ == '__main__':
    main()
    bot.polling(none_stop=True)
